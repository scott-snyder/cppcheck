Bottom: 9477f5e9874d07f0df4725936e90e47570763555
Top:    7e3046bc8d26870077ef335e894378c2178b88a7
Author: scott snyder <sss@karma>
Date:   2022-12-05 16:04:13 -0500

Suppress warnings about reference to temporary from typeid.

False positives.
Example 1:

x.cc:
```
class Foo {};

const std::type_info* tiVec() const
{
  return &typeid (Foo);
}
```

```
$ /home/sss/cppcheck/inst/bin/cppcheck x.cc
Checking x.cc ...
x.cc:6:10: error: Returning pointer that will be invalid when returning. [returnDanglingLifetime]
  return &typeid (Foo);
         ^
x.cc:6:10: note: Address of variable taken here.
  return &typeid (Foo);
         ^
x.cc:6:10: note: Returning pointer that will be invalid when returning.
  return &typeid (Foo);
```

Example 2:

y.cc:
```

class Foo {};
const std::type_info* testViewVector ()
{
  const std::type_info& ti = typeid(Foo);
  return &ti;
}
```

```
$ /home/sss/cppcheck/inst/bin/cppcheck y.cc
Checking y.cc ...
y.cc:7:10: error: Returning pointer to local variable 'ti' that will be invalid when returning. [returnDanglingLifetime]
  return &ti;
         ^
y.cc:6:28: note: Assigned to reference.
  const std::type_info& ti = typeid(Foo);
                           ^
y.cc:7:10: note: Address of variable taken here.
  return &ti;
         ^
y.cc:6:25: note: Variable created here.
  const std::type_info& ti = typeid(Foo);
                        ^
y.cc:7:10: note: Returning pointer to local variable 'ti' that will be invalid when returning.
  return &ti;
         ^
```

Work around with a special case.

